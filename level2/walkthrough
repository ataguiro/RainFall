We set a breakpoint inside p function to analyze it.
Then, we discover it accept a buffer and check the value of the ret address to exit early if it's doesnt succeed.
So we craft 80 bytes of noise, then a ret2ret with the return address of p function.

After, the ret to ret we fulfill with a reference to system instruction, exit instruction and shell string to launch it as a ret2ret exploit.
These 3 values lay on top of the stack, and we'll be pop by the second ret following our will.

So our exploit is built by :
- python -c "print "A"*80 + 

TODO
